services:
  # Production override for the web app (SSG, no HMR)
  web:
    image: stack-bun-node:latest
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    working_dir: /workspace
    command: >
      sh -lc "bun install --ignore-scripts \
      && exec bun ./scripts/prod-all.js"
    environment:
      AUTH_TRUST_HOST: "true"
      # Lock server to 5174 so healthcheck/Traefik match
      PORT: "5174"
      HOST: "0.0.0.0"
      # Provide a stable origin for Qwik SSG (LAN HTTPS via Traefik)
      SITE_ORIGIN: "https://${PUBLIC_IP:-127.0.0.1}:5173"
    volumes:
      - ./:/workspace
      - /workspace/node_modules
      - /workspace/apps/web/node_modules
    # Expose static server directly when running without Traefik
    ports:
      - "5174:5174"
    healthcheck:
      # Use Bun to probe the local HTTP server (Node is not installed in oven/bun)
      test: ["CMD-SHELL", "bun -e \"try{const r=await fetch('http://127.0.0.1:5174/index.html');process.exit(r.status<500?0:1)}catch(e){process.exit(1)}\" "]
      interval: 5s
      timeout: 3s
      retries: 60
      start_period: 60s
    labels:
      - "traefik.enable=true"
      # Same routing as dev: Traefik fronts the app on 5173
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.middlewares=web-headers@docker"
      - "traefik.http.middlewares.web-headers.headers.customResponseHeaders.Alt-Svc=h3=\":5173\"; ma=86400"
      - "traefik.http.middlewares.web-headers.headers.stsSeconds=63072000"
      - "traefik.http.middlewares.web-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.web-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.web-headers.headers.forceSTSHeader=true"
      - "traefik.http.routers.web.priority=10"
      - "traefik.http.services.web.loadbalancer.server.port=5174"

  # Rust Gateway (prod mode â€” same binary run as dev for now)
  gateway:
    image: rustlang/rust:nightly
    working_dir: /workspace
    command: >
      /bin/bash -lc "set -euo pipefail \
      && apt-get update \
      && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends capnproto pkg-config libssl-dev build-essential ca-certificates \
      && update-ca-certificates \
      && /usr/local/cargo/bin/cargo --version \
      && /usr/local/cargo/bin/cargo run --manifest-path apps/gateway/Cargo.toml --release"
    environment:
      RUST_LOG: info
      # Allow HTTPS origins on 5173 (LAN IP via Traefik)
      CORS_ALLOW_ORIGINS: "https://localhost:5173,https://127.0.0.1:5173,https://${PUBLIC_IP:-127.0.0.1}:5173"
      CORS_ALLOW_ANY_IP_PORTS: "5173"
      GATEWAY_ADDR: 0.0.0.0:7000
    volumes:
      - ./:/workspace
      # Cache Cargo registry, git index, and build artifacts across runs
      - cargo-registry:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - cargo-target:/workspace/target
    healthcheck:
      test: ["CMD-SHELL", "/bin/bash -lc 'exec 3<>/dev/tcp/127.0.0.1/7000 && echo -e \"GET /healthz HTTP/1.0\\r\\n\\r\\n\" >&3 && grep -q ok <&3' "]
      interval: 5s
      timeout: 3s
      retries: 60
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gateway.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.gateway.entrypoints=websecure"
      - "traefik.http.routers.gateway.tls=true"
      - "traefik.http.routers.gateway.priority=200"
      - "traefik.http.services.gateway.loadbalancer.server.port=7000"

  traefik:
    image: traefik:v3.5.1
    command:
      - "--entrypoints.websecure.address=:5173"
      - "--entrypoints.websecure.http3=true"
      - "--log.level=INFO"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
    ports:
      - "5173:5173/tcp"
      - "5173:5173/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./apps/web/certs:/certs:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
    depends_on:
      web:
        condition: service_healthy
      gateway:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-host.rule=HostRegexp(`traefik\\..+`)"
      - "traefik.http.routers.traefik-host.entrypoints=websecure"
      - "traefik.http.routers.traefik-host.tls=true"
      - "traefik.http.routers.traefik-host.service=api@internal"

volumes:
  cargo-registry:
  cargo-git:
  cargo-target:
