services:
  # Fast UI loop: build static on change
  ssg-build:
    image: stack-bun-node:latest
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    working_dir: /workspace/apps/web
    command: >
      sh -lc "bun install --ignore-scripts \
      && exec bun run build:ssg:watch"
    environment:
      CHOKIDAR_USEPOLLING: "0"
      AUTH_TRUST_HOST: "true"
      # Ensure SSG uses the same origin as Traefik for absolute URLs
      SITE_ORIGIN: "https://${PUBLIC_IP:-127.0.0.1}:5173"
    volumes:
      # Mount the repo for workspace resolution; override heavy dirs with named volumes
      - ./:/workspace
      - node_modules:/workspace/node_modules
      - web-node_modules:/workspace/apps/web/node_modules
      # Share only the build output with the preview container via a named volume
      - dist-cache:/workspace/apps/web/dist

  # Serve the built SSG output
  ssg-preview:
    image: stack-bun-node:latest
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    working_dir: /workspace/apps/web
    depends_on:
      - ssg-build
    command: >
      sh -lc "node ./scripts/preview.express.cjs"
    environment:
      # Run preview over HTTP internally; Traefik terminates TLS
      NO_HTTPS: "1"
    volumes:
      - dist-cache:/workspace/apps/web/dist:ro
    labels:
      - "traefik.enable=true"
      # Web (Vite preview) at '/'
      # Match any host on the websecure entrypoint to avoid 404 when using bare IPs
      - "traefik.http.routers.dev-web.rule=HostRegexp(`{any:.+}`) && PathPrefix(`/`)"
      - "traefik.http.routers.dev-web.entrypoints=websecure"
      - "traefik.http.routers.dev-web.tls=true"
      # Middlewares (docker-defined + file-defined)
      # - dev-compress@docker ensures gzip even if file provider is inactive
      # - dev-cache-html@docker sets document Cache-Control
      # - security_headers@file adds CSP/COOP/etc; dev-web-headers adds HSTS/Alt-Svc
      - "traefik.http.routers.dev-web.middlewares=dev-compress@docker,security_headers@file,dev-cache-html@docker,dev-web-headers@docker"
      - "traefik.http.middlewares.dev-web-headers.headers.customResponseHeaders.Alt-Svc=h3=\":5173\"; ma=86400"
      - "traefik.http.middlewares.dev-web-headers.headers.stsSeconds=63072000"
      - "traefik.http.middlewares.dev-web-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.dev-web-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.dev-web-headers.headers.forceSTSHeader=true"
      # Docker-defined gzip and header middlewares
      - "traefik.http.middlewares.dev-compress.compress=true"
      # Document headers (Cache-Control + Vary) placed on dev-web-headers (which we already apply and is known-good)
      - "traefik.http.middlewares.dev-web-headers.headers.customResponseHeaders.Cache-Control=public, max-age=600, stale-while-revalidate=86400"
      - "traefik.http.middlewares.dev-web-headers.headers.customResponseHeaders.Vary=Accept-Encoding"
      - "traefik.http.routers.dev-web.priority=10"
      - "traefik.http.services.dev-web.loadbalancer.server.port=5174"
      # Secondary router for long-lived cached assets
      - "traefik.http.routers.dev-web-assets.rule=HostRegexp(`{any:.+}`) && (PathPrefix(`/assets`) || PathPrefix(`/build`) || Path(`/theme-init.js`))"
      - "traefik.http.routers.dev-web-assets.entrypoints=websecure"
      - "traefik.http.routers.dev-web-assets.tls=true"
      - "traefik.http.routers.dev-web-assets.priority=100"
      - "traefik.http.routers.dev-web-assets.service=dev-web"
      - "traefik.http.routers.dev-web-assets.middlewares=dev-compress@docker,dev-asset-headers@docker"
      - "traefik.http.middlewares.dev-asset-headers.headers.customResponseHeaders.Cache-Control=public, max-age=31536000, immutable"
      - "traefik.http.middlewares.dev-asset-headers.headers.customResponseHeaders.Vary=Accept-Encoding"
      - "traefik.http.middlewares.dev-asset-headers.headers.stsSeconds=63072000"
      - "traefik.http.middlewares.dev-asset-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.dev-asset-headers.headers.stsPreload=true"

  # Rust Gateway (dev API)
  gateway:
    build:
      context: .
      dockerfile: docker/gateway.Dockerfile
    working_dir: /workspace
    environment:
      RUST_LOG: info
      ADMIN_EMAIL: "${ADMIN_EMAIL:-admin@example.com}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD:-admin12345}"
      RUSTC_WRAPPER: "/usr/local/cargo/bin/sccache"
      SCCACHE_DIR: "/sccache"
      # Allow the dev site origins over HTTPS on 5173
      CORS_ALLOW_ORIGINS: "https://localhost:5173,https://127.0.0.1:5173,https://${PUBLIC_IP:-127.0.0.1}:5173"
      # Also allow any IP-based origin on port 5173 (LAN/public IPs)
      CORS_ALLOW_ANY_IP_PORTS: "5173"
      # Bind on container network
      GATEWAY_ADDR: 0.0.0.0:7000
    volumes:
      - ./apps/gateway/admin.seed:/config/admin.seed:ro
    healthcheck:
      test: ["CMD-SHELL", "/bin/bash -lc 'exec 3<>/dev/tcp/127.0.0.1/7000 && echo -e \"GET /healthz HTTP/1.0\\r\\n\\r\\n\" >&3 && grep -q ok <&3' "]
      interval: 5s
      timeout: 3s
      retries: 60
      start_period: 60s
    labels:
      - "traefik.enable=true"
      # Route API requests to the Rust gateway
      - "traefik.http.routers.dev-gateway.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.dev-gateway.entrypoints=websecure"
      - "traefik.http.routers.dev-gateway.tls=true"
      # Ensure API route wins over generic web route
      - "traefik.http.routers.dev-gateway.priority=200"
      # Also compress API responses via Traefik
      - "traefik.http.routers.dev-gateway.middlewares=compress@file"
      - "traefik.http.services.dev-gateway.loadbalancer.server.port=7000"

  # Traefik (dev TLS/proxy)
  traefik:
    image: traefik:v3.5.1
    command:
      - "--entrypoints.websecure.address=:5173"
      - "--entrypoints.websecure.http3=true"
      - "--log.level=INFO"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
    ports:
      - "5173:5173/tcp"
      - "5173:5173/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./apps/web/certs:/certs:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
    depends_on:
      - ssg-preview
      - gateway
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-host.rule=HostRegexp(`traefik\\..+`)"
      - "traefik.http.routers.traefik-host.entrypoints=websecure"
      - "traefik.http.routers.traefik-host.tls=true"
      - "traefik.http.routers.traefik-host.service=api@internal"

volumes:
  node_modules:
  web-node_modules:
  dist-cache:
  cargo-registry:
  cargo-git:
  cargo-target:
  sccache:
