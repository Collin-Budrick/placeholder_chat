services:
  # Dev-only web with Vite HMR (no gateway/lynx/traefik)
  web:
    image: stack-bun-node:latest
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    working_dir: /workspace
    command: >
      sh -lc "bun install --ignore-scripts \
      && exec bun apps/web/scripts/dev-with-env.js"
    environment:
      # Improve file watching on bind mounts
      CHOKIDAR_USEPOLLING: "1"
      CHOKIDAR_INTERVAL: "100"
      # Run Vite over HTTP in-container; Traefik terminates TLS on 5173
      NO_HTTPS: "1"
      DOCKER_TRAEFIK: "1"
      AUTH_TRUST_HOST: "true"
      # Surface host LAN IPs into the container for tooling
      PUBLIC_IP: "${PUBLIC_IP}"
      HMR_HOST: "${HMR_HOST:-${PUBLIC_IP}}"
      # Advertise LAN origin so assets and HMR work from other devices
      PUBLIC_ORIGIN: "https://${PUBLIC_IP:-127.0.0.1}:5173"
      LAN_DEV_URL: "https://${PUBLIC_IP:-127.0.0.1}:5173"
      # Ensure mkcert includes the LAN IP when HTTPS is enabled
      USE_MKCERT: "1"
      MKCERT_HOSTS: "localhost,127.0.0.1,::1,${PUBLIC_IP:-127.0.0.1}"
      # Optional: HMR host/IP written by scripts/write-public-ip-env.mjs
      # HMR_HOST: "${HMR_HOST}"
    volumes:
      - ./:/workspace
      - /workspace/node_modules
      - /workspace/apps/web/node_modules
    ports:
      # Direct access to Vite dev server over HTTP
      - "5174:5174"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"http=require('http');r=http.get('http://127.0.0.1:5174/');r.on('response', s=>process.exit(s.statusCode<500?0:1));r.on('error', ()=>process.exit(1));\" "]
      interval: 5s
      timeout: 3s
      retries: 60
      start_period: 60s

    labels:
      - "traefik.enable=true"
      # Web (Vite) at '/'
      - "traefik.http.routers.dev-web.rule=PathPrefix(`/`)"
      - "traefik.http.routers.dev-web.entrypoints=websecure"
      - "traefik.http.routers.dev-web.tls=true"
      - "traefik.http.routers.dev-web.middlewares=dev-web-headers@docker"
      - "traefik.http.middlewares.dev-web-headers.headers.customResponseHeaders.Alt-Svc=h3=\":5173\"; ma=86400"
      - "traefik.http.middlewares.dev-web-headers.headers.stsSeconds=63072000"
      - "traefik.http.middlewares.dev-web-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.dev-web-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.dev-web-headers.headers.forceSTSHeader=true"
      - "traefik.http.routers.dev-web.priority=10"
      - "traefik.http.services.dev-web.loadbalancer.server.port=5174"

  # Rust Gateway (dev API)
  gateway:
    build:
      context: .
      dockerfile: docker/gateway.Dockerfile
      target: dev-base
    working_dir: /workspace
    command: >
      /bin/bash -lc "set -euo pipefail \
      && cargo --version \
      && sccache --start-server || true \
      && cargo run --manifest-path apps/gateway/Cargo.toml"
    environment:
      RUST_LOG: info
      RUSTC_WRAPPER: "/usr/local/cargo/bin/sccache"
      SCCACHE_DIR: "/sccache"
      # Allow the dev site origins over HTTPS on 5173
      CORS_ALLOW_ORIGINS: "https://localhost:5173,https://127.0.0.1:5173,https://${PUBLIC_IP:-127.0.0.1}:5173"
      # Also allow any IP-based origin on port 5173 (LAN/public IPs)
      CORS_ALLOW_ANY_IP_PORTS: "5173"
      # Bind on container network
      GATEWAY_ADDR: 0.0.0.0:7000
    volumes:
      - ./:/workspace
      # Cache Cargo registry, git index, and build artifacts across runs
      - cargo-registry:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - cargo-target:/workspace/target
      - sccache:/sccache
    healthcheck:
      test: ["CMD-SHELL", "/bin/bash -lc 'exec 3<>/dev/tcp/127.0.0.1/7000 && echo -e \"GET /healthz HTTP/1.0\\r\\n\\r\\n\" >&3 && grep -q ok <&3' "]
      interval: 5s
      timeout: 3s
      retries: 60
      start_period: 60s
    labels:
      - "traefik.enable=true"
      # Route API requests to the Rust gateway
      - "traefik.http.routers.dev-gateway.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.dev-gateway.entrypoints=websecure"
      - "traefik.http.routers.dev-gateway.tls=true"
      # Ensure API route wins over generic web route
      - "traefik.http.routers.dev-gateway.priority=200"
      - "traefik.http.services.dev-gateway.loadbalancer.server.port=7000"

  traefik:
    image: traefik:v3.5.1
    command:
      - "--entrypoints.websecure.address=:5173"
      - "--entrypoints.websecure.http3=true"
      - "--log.level=INFO"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
    ports:
      - "5173:5173/tcp"
      - "5173:5173/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./apps/web/certs:/certs:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
    depends_on:
      web:
        condition: service_healthy
      gateway:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-host.rule=HostRegexp(`traefik\\..+`)"
      - "traefik.http.routers.traefik-host.entrypoints=websecure"
      - "traefik.http.routers.traefik-host.tls=true"
      - "traefik.http.routers.traefik-host.service=api@internal"

volumes:
  cargo-registry:
  cargo-git:
  cargo-target:
  sccache:
